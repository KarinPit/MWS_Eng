---
import Navigation from "../components/navigation.vue";
import ContactFormPage from "../components/contactFormPage.vue";
import LoadingPage from "../html/loadingPage.astro";
import "../../public/styles/contact.css";
import "../../public/styles/generalStyles.css";

async function fetchData() {
  const response = await fetch(
    "https://mws-data-280b2464bf34.herokuapp.com/api/contact-info"
  );
  const { data } = await response.json();
  return data;
}

async function loadData() {
  try {
    const data = await fetchData();
    return data;
  } catch (error) {
    console.error("Error:", error);
  }
}

var res = null;
res = await loadData();
---

<html lang="he">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link rel="icon" type="image/svg+xml" href="/images/Favicon-new.svg" />
    <title>MWS Studio</title>
    <link
      href="https://fonts.googleapis.com/css2?family=Alegreya+Sans+SC:wght@900&family=Assistant:wght@200;300;400;500;600;700;800&display=swap"
      rel="stylesheet"
    />
    <script src="../js/generalScripts.js"></script>
    <title>MWS Design</title>
  </head>
  <body>
    <main>
      <LoadingPage />
      <div class="web-template">
        <div class="navbars">
          <Navigation client:load />
        </div>

        <div class="main">
          <div id="map-div"></div>

          <div class="contact-page">
            <ContactFormPage client:load />
          </div>

          <div class="footer">
            <p>054-4568784</p>
            <p>Karin Pitlik - Web Development</p>
            <p>
              <a href="/accessibility">| Accessibility Statement |</a>
              <!-- <a href="/הצהרת נגישות.docx" download="Accessibility File"
                >| הצהרת נגישות |
              </a> -->
            </p>
          </div>
        </div>
      </div>
    </main>
  </body>
</html>

<script src="../../public/NagishLi/nagishli_beta.js" charset="utf-8"></script>

<script define:vars={{ res }}>
  var gMap;

  if (res) {
    window.addEventListener("load", () => {
      setTimeout(() => {
        const loadingScreen = document.querySelector(".loading-screen");
        if (loadingScreen) {
          loadingScreen.style.opacity = 0;
          loadingScreen.addEventListener(
            "transitionend",
            () => {
              loadingScreen.style.display = "none";
            },
            { once: true }
          );
        }
      }, 2500);
    });

    _connectGoogleApi();
    initMap();
  }

  async function _connectGoogleApi() {
    const API_KEY = "AIzaSyAqYsdKnuV6P-nsHHAJeBNM7jyDABbvbug";
    if (window.google) return Promise.resolve();
    var elGoogleApi = document.createElement("script");
    elGoogleApi.src = `https://maps.googleapis.com/maps/api/js?key=${API_KEY}&language=en`;
    elGoogleApi.async = true;
    document.body.append(elGoogleApi);

    return new Promise((resolve, reject) => {
      elGoogleApi.onload = resolve;
      elGoogleApi.onerror = () => reject("Google script failed to load");
    });
  }

  async function initMap(lat = 32.301236, lng = 34.913379) {
    console.log("InitMap");
    return _connectGoogleApi().then(() => {
      console.log("google available");
      gMap = new google.maps.Map(document.querySelector("#map-div"), {
        center: { lat, lng },
        zoom: 14,
      });
      let loc = gMap.center.toJSON();
      fetchData.getAddress(getAddressUrl(loc), fetchData.showAddress);
      showWeather(loc);
      console.log("Map Loaded!", gMap);
    });
  }
</script>
